name: sim_crm
services:
  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sim_crm_django
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - TELEGRAM_CONTROL_BOT_TOKEN=${TELEGRAM_CONTROL_BOT_TOKEN}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - API_TOKEN=${API_TOKEN}
      - DJANGO_API_URL=${DJANGO_API_URL}
    depends_on:
      - postgres
      - redis
    volumes:
      - .:/app
      - static:/app/staticfiles
    networks:
      - sim_crm_network

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sim_crm_celery
    command: celery -A sim_crm worker --loglevel=info
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    networks:
      - sim_crm_network

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sim_crm_celery_beat
    command: celery -A sim_crm beat --loglevel=info
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=5432
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - redis
      - postgres
    volumes:
      - .:/app
    networks:
      - sim_crm_network

  bot:
    build:
      context: .
      dockerfile: Dockerfile.bot
    container_name: sim_crm_bot
    command: python bot/bot.py
    working_dir: /app
    environment:
      - TELEGRAM_CONTROL_BOT_TOKEN=${TELEGRAM_CONTROL_BOT_TOKEN}
      - DJANGO_API_URL=${DJANGO_API_URL}
      - API_TOKEN=${API_TOKEN}
      - DJANGO_SETTINGS_MODULE=sim_crm.settings
    volumes:
      - .:/app
    depends_on:
      - django
    networks:
      - sim_crm_network

  postgres:
    image: postgres:15
    container_name: sim_crm_postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - sim_crm_network

  redis:
    image: redis:7
    container_name: sim_crm_redis
    networks:
      - sim_crm_network

  nginx:
    image: nginx:alpine
    container_name: sim_crm_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - static:/app/staticfiles
    depends_on:
      - django
    networks:
      - sim_crm_network

volumes:
  postgres_data:
  static:

networks:
  sim_crm_network:
    driver: bridge